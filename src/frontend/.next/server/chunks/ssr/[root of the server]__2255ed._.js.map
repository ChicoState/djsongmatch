{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///service/app/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAgR,GAC7S,8CACA"}},
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["file:///service/app/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA4P,GACzR,0BACA"}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 61, "column": 0}, "map": {"version":3,"sources":["file:///service/app/actions.ts"],"sourcesContent":["\"use server\";\n// entire file uses server ACTIONS, \n// do NOT export components in this file, only functions\n\nimport { musicData, Song } from \"@/frontend/lib/db/schema\";\nimport { and, eq, like, ne, or, sql } from \"drizzle-orm\";\nimport { drizzle } from \"drizzle-orm/libsql\";\n\nconst db = drizzle(\"file:./assets/ClassicHit.db\");\n\n// constants for song.mode\nconst MINOR = 0;\nconst MAJOR = 1\n\nexport async function getSong(songId: number) {\n    const song = db\n        .select()\n        .from(musicData)\n        .where(\n            eq(musicData.songId, Number(songId.toString()))\n        ).get();\n\n    return song;\n}\n\nexport async function getSameKey(song: Song, relativeKey: boolean = true) {\n    if (song.key === null || song.mode === null) return;\n\n    let relativeQuery = relativeKey\n        ? and(\n            ne(musicData.mode, song.mode),\n\n            // if song is major, go back 3 half steps to get relative minor\n            // if song is minor, go forward 3 half steps to get relative major\n            // mod 12 because 12 total tones\n            eq(musicData.key, (song.mode === MAJOR ? song.key - 3 : song.key + 3) % 12)\n        )\n        : undefined; // if relativeKey=false, just ignore query\n\n    return db\n        .select()\n        .from(musicData)\n        .where(\n            or(\n                and(\n                    // checks that same song and mode\n                    eq(musicData.mode, song.mode),\n                    eq(musicData.key, song.key)\n                ),\n                relativeQuery\n            )\n        )\n        .orderBy(sql`RANDOM()`)\n        .limit(10); // arbitary limit\n}\n\nexport async function searchSongs(query: string) {\n    const words = query.split(\" \");\n    const conditions = words.map((word) => {\n        return or(\n            like(musicData.title, `%${word}%`),\n            like(musicData.artist, `%${word}%`)\n        );\n    });\n\n    return db\n        .select()\n        .from(musicData)\n        .where(\n            and(...conditions)\n        )\n        .limit(100)\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAMA;AADA;AAAA;;;;;;;;;;AAGA,MAAM,KAAK,CAAA,GAAA,kKAAA,CAAA,UAAO,AAAD,EAAE;AAEnB,0BAA0B;AAC1B,MAAM,QAAQ;AACd,MAAM,QAAQ;AAEP,eAAe,uCAAK,GAAL,QAAQ,MAAc;IACxC,MAAM,OAAO,GACR,MAAM,GACN,IAAI,CAAC,WACL,KAAK,CACF,CAAA,GAAA,kKAAA,CAAA,KAAE,AAAD,EAAE,UAAU,MAAM,EAAE,OAAO,OAAO,QAAQ,MAC7C,GAAG;IAET,OAAO;AACX;AAEO,eAAe,uCAAQ,GAAR,WAAW,IAAU,EAAE,cAAuB,IAAI;IACpE,IAAI,KAAK,GAAG,KAAK,QAAQ,KAAK,IAAI,KAAK,MAAM;IAE7C,IAAI,gBAAgB,cACd,CAAA,GAAA,kKAAA,CAAA,MAAG,AAAD,EACA,CAAA,GAAA,kKAAA,CAAA,KAAE,AAAD,EAAE,UAAU,IAAI,EAAE,KAAK,IAAI,GAE5B,+DAA+D;IAC/D,kEAAkE;IAClE,gCAAgC;IAChC,CAAA,GAAA,kKAAA,CAAA,KAAE,AAAD,EAAE,UAAU,GAAG,EAAE,CAAC,KAAK,IAAI,KAAK,QAAQ,KAAK,GAAG,GAAG,IAAI,KAAK,GAAG,GAAG,CAAC,IAAI,OAE1E,WAAW,0CAA0C;IAE3D,OAAO,GACF,MAAM,GACN,IAAI,CAAC,WACL,KAAK,CACF,CAAA,GAAA,kKAAA,CAAA,KAAE,AAAD,EACG,CAAA,GAAA,kKAAA,CAAA,MAAG,AAAD,EACE,iCAAiC;IACjC,CAAA,GAAA,kKAAA,CAAA,KAAE,AAAD,EAAE,UAAU,IAAI,EAAE,KAAK,IAAI,GAC5B,CAAA,GAAA,kKAAA,CAAA,KAAE,AAAD,EAAE,UAAU,GAAG,EAAE,KAAK,GAAG,IAE9B,gBAGP,OAAO,CAAC,4IAAA,CAAA,MAAG,CAAC,QAAQ,CAAC,EACrB,KAAK,CAAC,KAAK,iBAAiB;AACrC;AAEO,eAAe,uCAAS,GAAT,YAAY,KAAa;IAC3C,MAAM,QAAQ,MAAM,KAAK,CAAC;IAC1B,MAAM,aAAa,MAAM,GAAG,CAAC,CAAC;QAC1B,OAAO,CAAA,GAAA,kKAAA,CAAA,KAAE,AAAD,EACJ,CAAA,GAAA,kKAAA,CAAA,OAAI,AAAD,EAAE,UAAU,KAAK,EAAE,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,GACjC,CAAA,GAAA,kKAAA,CAAA,OAAI,AAAD,EAAE,UAAU,MAAM,EAAE,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IAE1C;IAEA,OAAO,GACF,MAAM,GACN,IAAI,CAAC,WACL,KAAK,CACF,CAAA,GAAA,kKAAA,CAAA,MAAG,AAAD,KAAK,aAEV,KAAK,CAAC;AACf;;;IA1DsB;IAWA;IA+BA;;AA1CA,+OAAA;AAWA,+OAAA;AA+BA,+OAAA"}},
    {"offset": {"line": 119, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 126, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 130, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}