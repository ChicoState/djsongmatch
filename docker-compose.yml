services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: nextjs_app
    env_file:
      - .env
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app/frontend
      - /app/frontend/node_modules
      - ./db.db:/app/db.db
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://backend:5001

      - NEXT_PUBLIC_FIREBASE_API_KEY=${NEXT_PUBLIC_FIREBASE_API_KEY}
      - NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=${NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN}
      - NEXT_PUBLIC_FIREBASE_PROJECT_ID=${NEXT_PUBLIC_FIREBASE_PROJECT_ID}
      - NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=${NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET}
      - NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=${NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID}
      - NEXT_PUBLIC_FIREBASE_APP_ID=${NEXT_PUBLIC_FIREBASE_APP_ID}

    command: ["sh", "-c", "pnpm dev"]
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: python_backend
    ports:
      - "5001:5001"
    volumes:
      - ./backend:/app/backend
      - ./db.db:/app/db.db
    environment:
      - FLASK_ENV=development
      - FLASK_APP=flaskTest.py
    command: ["python", "-m", "flask", "run", "--host=0.0.0.0", "--port=5001"]

